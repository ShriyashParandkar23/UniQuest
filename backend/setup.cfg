# Pytest configuration
[tool:pytest]
DJANGO_SETTINGS_MODULE = uniquest_backend.settings.test
python_files = tests.py test_*.py *_tests.py
python_classes = Test*
python_functions = test_*
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --reuse-db
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests

# Coverage configuration
[coverage:run]
source = .
omit = 
    */migrations/*
    */venv/*
    */virtualenvs/*
    */tests/*
    */test_*
    manage.py
    */settings/*
    */wsgi.py
    */asgi.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError

# Flake8 configuration
[flake8]
max-line-length = 88
exclude = 
    .git,
    __pycache__,
    migrations,
    venv,
    .venv,
    virtualenvs
ignore = 
    E203,  # whitespace before ':'
    E501,  # line too long (handled by black)
    W503,  # line break before binary operator
per-file-ignores =
    */settings/*.py:E501,F401
    */tests.py:F401
    */test_*.py:F401

# MyPy configuration
[mypy]
python_version = 3.11
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
exclude = migrations/

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  migrations
  | venv
  | .venv
  | virtualenvs
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
known_first_party = "apps,uniquest_backend"
sections = ["FUTURE","STDLIB","DJANGO","THIRDPARTY","FIRSTPARTY","LOCALFOLDER"]
skip = ["migrations", "venv", ".venv", "virtualenvs"]
